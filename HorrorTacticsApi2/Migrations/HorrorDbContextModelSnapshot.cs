// <auto-generated />
using HorrorTacticsApi2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HorrorTacticsApi2.Migrations
{
    [DbContext(typeof(HorrorDbContext))]
    partial class HorrorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AudioEntityStorySceneEntity", b =>
                {
                    b.Property<long>("AudiosId")
                        .HasColumnType("bigint");

                    b.Property<long>("ScenesId")
                        .HasColumnType("bigint");

                    b.HasKey("AudiosId", "ScenesId");

                    b.HasIndex("ScenesId");

                    b.ToTable("AudioEntityStorySceneEntity");
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.AudioEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("DurationSeconds")
                        .HasColumnType("bigint");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsBgm")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("Audios");
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.FileEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsVirusScanned")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<long>("SizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Filename");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.ImageEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.Property<long>("Height")
                        .HasColumnType("bigint");

                    b.Property<long>("Width")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.StoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("character varying(600)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("Id");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.StorySceneEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Minigames")
                        .HasColumnType("bigint");

                    b.Property<long>("ParentStoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Texts")
                        .IsRequired()
                        .HasMaxLength(15000)
                        .HasColumnType("character varying(15000)");

                    b.Property<string>("Timers")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ParentStoryId");

                    b.ToTable("StoryScenes");
                });

            modelBuilder.Entity("ImageEntityStorySceneEntity", b =>
                {
                    b.Property<long>("ImagesId")
                        .HasColumnType("bigint");

                    b.Property<long>("ScenesId")
                        .HasColumnType("bigint");

                    b.HasKey("ImagesId", "ScenesId");

                    b.HasIndex("ScenesId");

                    b.ToTable("ImageEntityStorySceneEntity");
                });

            modelBuilder.Entity("AudioEntityStorySceneEntity", b =>
                {
                    b.HasOne("HorrorTacticsApi2.Data.Entities.AudioEntity", null)
                        .WithMany()
                        .HasForeignKey("AudiosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HorrorTacticsApi2.Data.Entities.StorySceneEntity", null)
                        .WithMany()
                        .HasForeignKey("ScenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.AudioEntity", b =>
                {
                    b.HasOne("HorrorTacticsApi2.Data.Entities.FileEntity", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.ImageEntity", b =>
                {
                    b.HasOne("HorrorTacticsApi2.Data.Entities.FileEntity", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.StorySceneEntity", b =>
                {
                    b.HasOne("HorrorTacticsApi2.Data.Entities.StoryEntity", "ParentStory")
                        .WithMany("Scenes")
                        .HasForeignKey("ParentStoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentStory");
                });

            modelBuilder.Entity("ImageEntityStorySceneEntity", b =>
                {
                    b.HasOne("HorrorTacticsApi2.Data.Entities.ImageEntity", null)
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HorrorTacticsApi2.Data.Entities.StorySceneEntity", null)
                        .WithMany()
                        .HasForeignKey("ScenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HorrorTacticsApi2.Data.Entities.StoryEntity", b =>
                {
                    b.Navigation("Scenes");
                });
#pragma warning restore 612, 618
        }
    }
}
